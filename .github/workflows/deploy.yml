name: Build and deploy new Version

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  release:
    types: [ created ]

jobs:
  deploy:
    name: Deploy
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: deploy new bot version
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.YESBOT_HOSTNAME }}
          port: ${{ secrets.YESBOT_PORT }}
          key: ${{ secrets.DEPLOYMENT_KEY }}
          username: ${{ secrets.YESBOT_USERNAME }}
          script: |
            sudo ./updater.sh

  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          registry: ${{ env.REGISTRY }}
          password: ${{ secrets.GITHUB_TOKEN }}
          node-version: ${{ matrix.node-version }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: yarn install --frozen-lockfile

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          scope: '@Yes-Theory-Fam'
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
